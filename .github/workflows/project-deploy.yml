name: Release project

on:
  push:
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: alex-cluster
  GKE_ZONE: europe-central2-b
  REGISTRY: europe-central2-docker.pkg.dev
  REPOSITORY: gregistry
  
  PROJECT_IMAGE: project
  TODOBACKEND_IMAGE: todobackend
  
  SERIVICE: project
  BRANCH: ${{ github.ref_name }}

jobs:
  build-publish-deplooy:
    name: Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: main

    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
        
      - name: 'Set Up Google Cloud Service Account'
        uses: google-github-actions/auth@v3
        with:
          credentials_json: '${{ secrets.GKE_SA_KEY }}'
          
      - name: 'Set up Cloud SDK'
        uses: google-github-actions/setup-gcloud@v3

      - name: 'Get GKE Credentials'
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
          cluster_name: '${{ env.GKE_CLUSTER }}'
          project_id: '${{ env.PROJECT_ID }}'
          location: '${{ env.GKE_ZONE }}'

      - name: 'Set up Docker Buildx'
        run: gcloud auth configure-docker "$REGISTRY"

      - name: 'Form images names'
        run: |
          echo "PROJECT_IMAGE_TAG=$REGISTRY/$PROJECT_ID/$REPOSITORY/$PROJECT_IMAGE:$BRANCH-$GITHUB_SHA" >> $GITHUB_ENV
          echo "TODOBACKEND_IMAGE_TAG=$REGISTRY/$PROJECT_ID/$REPOSITORY/$TODOBACKEND_IMAGE:$BRANCH-$GITHUB_SHA" >> $GITHUB_ENV

      - name: 'Build and Push'
        run: |
          echo "Project image: $PROJECT_IMAGE_TAG"
          docker build ./theproject/TheProject -t $PROJECT_IMAGE_TAG
          docker push $PROJECT_IMAGE_TAG
          echo "TodoBackend image: $TODOBACKEND_IMAGE_TAG"
          docker build ./theproject/TodoBackend -t $TODOBACKEND_IMAGE_TAG
          docker push $TODOBACKEND_IMAGE_TAG

      - name: 'Set up kustomize'
        uses: syntaqx/setup-kustomize@v1

      - name: 'Set target namespace'
        run: |
          if [[ "$BRANCH" == "main" ]] ; then
            echo "NAMESPACE=project" >> $GITHUB_ENV
          else
            echo "NAMESPACE=$BRANCH" >> $GITHUB_ENV
          fi
          echo $NAMESPACE

      - name: Deploy
        run: |
          cd ./theproject
          kubectl create namespace $NAMESPACE || true
          kubectl config set-context --current --namespace=$NAMESPACE
          kustomize edit set namespace $NAMESPACE
          kustomize edit set image \
            THEPROJECT/IMAGE=$PROJECT_IMAGE_TAG \
            TODOBACKEND/IMAGE=$TODOBACKEND_IMAGE_TAG
          kustomize build . | kubectl apply -f -
